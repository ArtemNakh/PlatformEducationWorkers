@using PlatformEducationWorkers.Core.Models;
@using PlatformEducationWorkers.Models.Questions;

@{
    Layout = "~/Views/Shared/_LayoutWorker.cshtml";
    ViewBag.Title = "Проходження курсу";

    var course = ViewBag.Course as Courses;
    var questions = ViewBag.Questions as List<QuestionContext>;
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center py-4">
            <h2 class="mb-0">Проходження курсу</h2>
        </div>
        <div class="card-body px-4 py-5">
            <div class="mb-4">
                <h3 class="text-secondary">Назва курсу:</h3>
                <p class="fs-5 text-muted">@course.TitleCource</p>
            </div>

            <div class="mb-4">
                <h3 class="text-secondary">Опис курсу:</h3>
                <p class="fs-5 text-muted">@course.Description</p>
            </div>

            @if (course.ShowContextPassage)
            {
                <div class="mb-4">
                    <h3 class="text-secondary">Вміст курсу:</h3>
                    <p class="bg-light p-3 rounded text-dark">@course.ContentCourse</p>
                </div>
            }

            <form asp-action="SaveResultCourse" method="post" class="mt-5">
                <input type="hidden" name="CourseId" value="@course.Id" />

                @for (int i = 0; i < ViewBag.Questions.Count; i++)
                {
                    <div class="mb-4">
                        <h4 class="text-primary">Питання @i + 1: @ViewBag.Questions[i].Text</h4>
                        <input type="hidden" name="Questions[@i].Text" value="@ViewBag.Questions[i].Text" />
                        <input type="hidden" name="Questions[@i].PhotoQuestionBase64" value="@ViewBag.Questions[i].PhotoQuestionBase64" />

                        <!-- Display Question Image if Available -->
                        @if (!string.IsNullOrEmpty(ViewBag.Questions[i].PhotoQuestionBase64))
                        {
                            <div class="mb-3">
                                <img src="data:image/jpeg;base64,@ViewBag.Questions[i].PhotoQuestionBase64" alt="Фото питання" class="img-fluid" style="max-height: 200px;" />
                            </div>
                        }


                        <!-- Check if more than one correct answer -->
                        @if (questions[i].Answers.Count(a => a.IsCorrect) > 1)
                        {
                            <!-- Checkbox for multiple correct answers -->
                            @for (int j = 0; j < questions[i].Answers.Count; j++)
                            {
                                <div class="form-check">
                                    <input class="form-check-input"
                                           type="checkbox"
                                           name="Questions[@i].Answers[@j].IsSelected"
                                           value="true"
                                           id="answer-@i-@j"
                                           data-correct="@(questions[i].Answers[j].IsCorrect.ToString().ToLower())"
                                           data-question-index="@i"
                                           onclick="updateSelectedCheckboxes(@i);" />
                                    <label class="form-check-label" for="answer-@i-@j">
                                        @questions[i].Answers[j].Text
                                    </label>
                                    <input type="hidden" name="Questions[@i].Answers[@j].Text" value="@questions[i].Answers[j].Text" />
                                    <input type="hidden" name="Questions[@i].Answers[@j].IsCorrectAnswer" value="@(questions[i].Answers[j].IsCorrect.ToString().ToLower())" />
                                    <input type="hidden" name="Questions[@i].Answers[@j].PhotoAnswerBase64" value="@(questions[i].Answers[j].PhotoAnswerBase64)" />

                                    <!-- Display Answer Image if Available -->
                                    @if (!string.IsNullOrEmpty(questions[i].Answers[j].PhotoAnswerBase64))
                                    {
                                        <div class="mb-3">
                                            <img src="data:image/jpeg;base64,@questions[i].Answers[j].PhotoAnswerBase64" alt="Фото відповіді" class="img-fluid" style="max-height: 150px;" />
                                        </div>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <!-- Radio buttons for single correct answer -->
                            @for (int j = 0; j < questions[i].Answers.Count; j++)
                            {
                                <div class="form-check">
                                    <input class="form-check-input"
                                           type="radio"
                                           name="Questions[@i].Answers[@j].IsSelected"
                                           value="true"
                                           id="answer-@i-@j" />
                                    <label class="form-check-label" for="answer-@i-@j">
                                        @questions[i].Answers[j].Text
                                    </label>
                                    <input type="hidden" name="Questions[@i].Answers[@j].Text" value="@questions[i].Answers[@j].Text" />
                                    <input type="hidden" name="Questions[@i].Answers[@j].IsCorrectAnswer" value="@(questions[i].Answers[j].IsCorrect.ToString().ToLower())" />
                                    <input type="hidden" name="Questions[@i].Answers[@j].PhotoAnswerBase64" value="@(questions[i].Answers[j].PhotoAnswerBase64)" />

                                    <!-- Display Answer Image if Available -->
                                    @if (!string.IsNullOrEmpty(questions[i].Answers[j].PhotoAnswerBase64))
                                    {
                                        <div class="mb-3">
                                            <img src="data:image/jpeg;base64,@questions[i].Answers[j].PhotoAnswerBase64" alt="Фото відповіді" class="img-fluid" style="max-height: 150px;" />
                                        </div>
                                    }
                                </div>
                            }
                        }
                       
                    </div>
                }

                <div class="text-center mt-5">
                    <button type="submit" class="btn btn-success btn-lg px-5">Завершити</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function updateSelectedCheckboxes(questionIndex) {
        // Get all checkboxes for this question
        const checkboxes = document.querySelectorAll(`input[type="checkbox"][data-question-index="${questionIndex}"]`);
        const correctCount = [...checkboxes].filter(checkbox => checkbox.dataset.correct === 'true').length;

        // Count how many checkboxes are selected
        const selectedCheckboxes = [...checkboxes].filter(checkbox => checkbox.checked);
        const selectedCount = selectedCheckboxes.length;

        // Enable or disable checkboxes based on selected count
        checkboxes.forEach(checkbox => {
            const isCorrect = checkbox.dataset.correct === 'true';

            // Disable unchecked checkboxes if the maximum limit is reached
            if (!checkbox.checked && selectedCount >= correctCount) {
                checkbox.disabled = true;
            } else {
                checkbox.disabled = false; // Enable unchecked checkboxes if the limit is not reached
            }
        });

        // Ensure the last clicked checkbox remains checked
        if (selectedCount > correctCount) {
            // Uncheck the first checkbox in the selected list to maintain the limit
            const lastChecked = selectedCheckboxes[selectedCheckboxes.length - 1];
            const firstChecked = selectedCheckboxes.find(cb => cb !== lastChecked);
            if (firstChecked) {
                firstChecked.checked = false;
                firstChecked.disabled = false; // Re-enable the unselected checkbox
            }
        }
    }

</script>