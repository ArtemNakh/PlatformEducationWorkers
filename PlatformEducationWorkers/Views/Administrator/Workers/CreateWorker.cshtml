@using PlatformEducationWorkers.Core.Models
@model PlatformEducationWorkers.Request.CreateUserRequest

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<h2>Add New Job Title</h2>

<form asp-action="CreateJobTitle" method="post">

    <div class="form-group">
        <label asp-for="Name">Job Title Name</label>
        <input asp-for="Name" class="form-control" placeholder="Enter Job Title Name" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Add Job Title</button>
</form>

<h2>Add New Workers</h2>
<form asp-action="CreateWorker" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Surname"></label>
        <input asp-for="Surname" class="form-control" />
        <span asp-validation-for="Surname" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Birthday"></label>
        <input asp-for="Birthday" class="form-control" type="date" />
        <span asp-validation-for="Birthday" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" type="email" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Password"></label>
        <input asp-for="Password" class="form-control" type="password" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Login"></label>
        <input asp-for="Login" class="form-control" />
        <span asp-validation-for="Login" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="jobTitleSelect">Job Title</label>
        <select id="jobTitleSelect" class="form-control" asp-for="JobTitleId" asp-items="@(new SelectList(ViewBag.JobTitles, "Id", "Name"))">
            <option value="">-- Select Job Title --</option>
        </select>
        <span asp-validation-for="JobTitleId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Role</label>
        <select asp-for="Role" class="form-control" asp-items="@(new SelectList(ViewBag.Roles))">
            <option value="">-- Select Role --</option>
        </select>
        <span asp-validation-for="Role" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Create User</button>
</form>



@section Scripts {
    <script>
        async function createJobTitle() {
            const jobTitleName = document.getElementById('JobTitleName').value;
            if (!jobTitleName) {
                alert('Please enter a job title.');
                return;
            }

            const response = await fetch('/JobTitle/CreateJobTitle', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': $('input[name="__RequestVerificationToken"]').val() // Ensure you include CSRF token
                },
                body: JSON.stringify({ Name: jobTitleName })
            });

            if (response.ok) {
                const data = await response.json();
                alert(`New Job Title Created: ${data.name}`);
                location.reload(); // Reload the page to refresh the job titles list
            } else {
                const error = await response.json();
                alert(`Error: ${error}`);
            }
        }
    </script>
}