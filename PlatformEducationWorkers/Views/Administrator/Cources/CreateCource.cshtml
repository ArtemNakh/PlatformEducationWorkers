@using PlatformEducationWorkers.Core.Models
@model PlatformEducationWorkers.Request.CreateCourceRequest

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Create Course";
}

<h2>Create Course</h2>

<form asp-action="CreateCource" method="post">
    <div asp-validation-summary="All" class="text-danger"></div> <!-- Вивести всі помилки -->

    <div class="form-group">
        <label asp-for="TitleCource">Title of Course</label>
        <input asp-for="TitleCource" class="form-control" />
        <span asp-validation-for="TitleCource" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description">Description</label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ContentCourse">Content (JSON format)</label>
        <textarea asp-for="ContentCourse" class="form-control"></textarea>
        <span asp-validation-for="ContentCourse" class="text-danger"></span>
    </div>

    <!-- Додавання питань та відповідей -->
    <div id="questions-container">
        <h3>Questions</h3>
        <button type="button" onclick="addQuestion()">Add Question</button>
    </div>

    <div class="form-group">
        <label>Access Roles</label>
        <div>
            @foreach (var jobTitle in (ViewBag.JobTitles as List<PlatformEducationWorkers.Core.Models.JobTitle>) ?? new List<PlatformEducationWorkers.Core.Models.JobTitle>())
            {
                <div class="form-check">
                    <input type="checkbox" name="AccessRoleIds[]" value="@jobTitle.Id" class="form-check-input" />
                    <label class="form-check-label">@jobTitle.Name</label>
                </div>
            }
        </div>
    </div>


    <button type="submit" class="btn btn-primary">Create Course</button>
</form>
<script>
    let questionIndex = 0;

    function addQuestion() {
        const container = document.getElementById('questions-container');
        const questionDiv = document.createElement('div');
        questionDiv.className = "question";
        questionDiv.innerHTML = `
                        <h4>Question ${questionIndex + 1}</h4>
                        <input type="text" name="Questions[${questionIndex}].Text" placeholder="Enter question" class="form-control" />

                        <div class="answers-container">
                            <h5>Answers</h5>
                            <button type="button" onclick="addAnswer(${questionIndex})">Add Answer</button>
                            <div id="answers-${questionIndex}">
                                <!-- Answers will be added here -->
                            </div>
                        </div>
                    `;
        container.appendChild(questionDiv);
        questionIndex++;
    }

    function addAnswer(questionIndex) {
        const answerContainer = document.getElementById(`answers-${questionIndex}`);
        const answerIndex = answerContainer.childElementCount;

        const answerDiv = document.createElement('div');
        answerDiv.className = "answer";
        answerDiv.innerHTML = `
                        <input type="text" name="Questions[${questionIndex}].Answers[${answerIndex}].Text" placeholder="Enter answer" class="form-control" />
                        <input type="checkbox" name="Questions[${questionIndex}].Answers[${answerIndex}].IsCorrect" value="true" /> Correct
                    `;
        answerContainer.appendChild(answerDiv);
    }

    // Add custom logic to handle checkbox state before form submission
    document.querySelector('form').onsubmit = function () {
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name*="IsCorrect"]');
        checkboxes.forEach(function (checkbox) {
            // Ensure unchecked checkboxes send 'false' value
            if (!checkbox.checked) {
                checkbox.value = "false";
            }
        });
    };
</script>